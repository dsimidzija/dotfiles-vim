# vim: set noexpandtab :

snippet req
	${1:#:object} = require '$1'

snippet greq
	goog.require '${1}'

snippet log
alias cons,log
	console.log '`expand('%:t')`[`line('.')+1`]: ${1:var}${0}', $1

snippet msg
alias msg
	c${0}onsole.log '`expand('%:t')`[`line('.')+1`]: ${1:var}'

snippet dbg
alias dbg
options indent
	${1:TARGET}
	console.log '`expand('%:t')`[`line('.')+1`]: $1${0}', $1

snippet insp
alias insp
options indent
	d${0}o ->
		_u = require 'util'
		console.log _u.inspect(${1:var}, {showHidden: false, depth: null})

snippet stack
	c${0}onsole.log '`expand('%:t')`[`line('.')+1`] STACK:', new Error().stack

snippet fun
abbr func,function
alias function
options indent
	${1:name} = (${2:#:params}) ->
		${0}
		return

snippet meth
abbr method
alias method
options indent
	###*
		${3:#:annotations}
	###
	${1:name}: (${2:#:params}) ->
		${0}
		return

snippet cb
abbr callback
options indent
	(${1:#:params}) ->
		${0}

snippet ano
abbr anno,annotation
options indent
	###*
		${0}
	###

snippet todo
options indent
	# @TODO: ${0}

snippet async_parallel
abbr parallel
alias para
options indent
	async.parallel {
		${1:first}: (next) ->
			next null
		${2:second}: (next) ->
			next null
	}, (err, results) ->
		return next err if err
		${0}

snippet async_waterfall
abbr waterfall
alias wfall
options indent
	async.waterfall [
		(next) ->
			next null
		(next) ->
			next null
	], (err, results) ->
		return next err if err
		${0}

snippet async_series
abbr series
alias series,srs
options indent
	async.series [
		(next) ->
			next null
		(next) ->
			next null
	], (err, results) ->
		return next err if err
		${0}

